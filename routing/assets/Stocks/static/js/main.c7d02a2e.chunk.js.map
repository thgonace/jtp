{"version":3,"sources":["db.txt","App.js","serviceWorker.js","index.js"],"names":["module","exports","Stock","props","state","Symbol","symbol","this","S","news","earnings","PT","HL","undefined","length","map","nw","Date","datetime","toLocaleDateString","href","url","headline","count","data","x","earning","push","y","actual","className","estimate","toFixed","period","width","height","colorType","color","title","targetHigh","bardata","targetMean","targetLow","targetMedian","xType","xDistance","hlbardata","metric","hlbardatab","stackBy","key","style","description","Component","App","Symbols","stock","Filtered","fetch","TEXT","then","response","text","split","i","JSON","parse","setState","forEach","toLowerCase","includes","onClick","setStock","id","type","placeholder","onChange","event","filter","target","value","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c7d02a2e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/db.6d0d1d92.txt\";","import React, { Component } from 'react';\nimport {\n  VerticalGridLines,\n  VerticalBarSeries,\n  LabelSeries, XYPlot, XAxis, YAxis, LineSeries, HorizontalGridLines\n} from 'react-vis';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport TEXT from './db.txt'\nclass Stock extends Component {\n  constructor(props) {\n    super(props);\n    \n    this.state = { Symbol: this.props.symbol };\n\n  }\n\n\n  render() {\n    if (this.state === null) return <div></div>;\n    let S = this.state.Symbol;\n    let news = \"\";\n    let earnings = \"\";\n    let PT = \"\";\n    let HL = \"\";\n    if (S.news !== null && S.news !== undefined && S.news.length !== 0) {\n      news = S.news.map(nw => (\n        <div>\n          <span>{new Date(nw.datetime * 1000).toLocaleDateString('en-US')}</span>\n          <a href={nw.url}>{nw.headline}</a>\n        </div>\n      ))\n      news = <div><h4>Company News</h4>{news}</div>\n    }\n    if (S.earnings !== null && S.earnings !== undefined && S.earnings.length !== 0) {\n      let count = 0;\n      let data = [];\n      let x = S.earnings.length;\n      earnings = S.earnings.map(earning => {\n        data.push({ x: x--, y: earning.actual });\n        if (earning.actual > 0) count++;\n        return (<div className=\"pb-3\">\n          <div>Actual Earnings:{earning.actual}</div>\n          <div>Estimate Earnings:{earning.estimate.toFixed(4)}</div>\n          <span>Period: {earning.period}</span>\n        </div>\n        )\n      })\n      earnings =\n        <div>\n          <h4>Company Earnings</h4>\n          {earnings}\n          {(data.length > 0) ?\n            <XYPlot\n              width={300}\n              height={300}>\n              <HorizontalGridLines />\n              <LineSeries\n                colorType=\"literal\"\n                color=\"red\"\n                data={data} />\n              <XAxis title=\"X\" />\n              <YAxis />\n            </XYPlot> : <div></div>}\n          <div>This company made money in {count} of the last 4 periods</div>\n        </div>\n    }\n    if (S.PT !== null && S.PT !== undefined && S.PT.targetHigh !== 0) {\n      let bardata = [{ x: \"High\", y: S.PT.targetHigh }, { x: \"Mean\", y: S.PT.targetMean }, { x: \"Low\", y: S.PT.targetLow }]\n      PT =\n        <div className=\"pb-3\">\n          <div>High:{S.PT.targetHigh}</div>\n          <div>Low:{S.PT.targetLow}</div>\n          <div>Mean:{S.PT.targetMean}</div>\n          <div>Median:{S.PT.targetMedian}</div>\n        </div>\n\n      PT =\n        <div>\n          <h4>Price Target</h4>\n          {PT}\n\n          <div>\n            <XYPlot xType=\"ordinal\" width={300} height={300} xDistance={100}>\n              <VerticalGridLines />\n              <HorizontalGridLines />\n              <XAxis />\n              <YAxis />\n              <VerticalBarSeries className=\"vertical-bar-series-example\" data={bardata} />\n            </XYPlot>\n          </div>\n\n          <div>{(S.PT.targetLow * 2 > S.PT.targetHigh) ?\n            \"There is an agreement on the upcoming value of the stock\" :\n            \"There is not an agreement on the upcoming value of the stock\"}\n          </div>\n        </div>\n    }\n    if (S.HL !== null && S.HL !== undefined && S.HL.symbol !== \"\") {\n      let hlbardata = [{ x: \"Low compared to high\", y: S.HL.metric['52WeekLow'] }]\n      let hlbardatab = [{ x: \"Low compared to high\", y: (S.HL.metric['52WeekHigh'] - S.HL.metric['52WeekLow']) }]\n      HL =\n        <div className=\"pb-3\">\n          <div>High:{S.HL.metric['52WeekHigh']}</div>\n          <div>High Date:{S.HL.metric['52WeekHighDate']}</div>\n          <div>Low:{S.HL.metric['52WeekLow']}</div>\n          <div>Low Date:{S.HL.metric['52WeekLowDate']}</div>\n        </div>\n      HL =\n        <div>\n          <h4>52 Week High/Low</h4>\n          {HL}\n          <XYPlot xType=\"ordinal\" width={300} height={300} stackBy=\"y\">\n            <VerticalGridLines />\n            <HorizontalGridLines />\n            <XAxis />\n            <YAxis />\n            <VerticalBarSeries className=\"vertical-bar-series-example\" data={hlbardata} />\n            <VerticalBarSeries data={hlbardatab} />\n          </XYPlot>\n          <div>{(S.HL.metric['52WeekLow'] * 2 > S.HL.metric['52WeekHigh']) ?\n            \"This stock has a low disparity\" :\n            \"This stock has a high disparity\"}\n          </div>\n        </div>\n    }\n    return (\n      <div className=\"App\" key=\"app\" >\n\n        <div className=\"d-flex pb-3 pt-2 vw-100 justify-content-center\">\n          <div className=\"card \" style={{ \"width\": \"75vw\" }}>\n            <div className=\"card-body\">\n              <h5 className=\"card-title\">{S.description}</h5>\n              <div>{S.symbol}</div>\n              <div className=\"container\">\n                <div className=\"row\">\n                  <div className=\"d-flex text-left col-12 col-xl-6\" style={{ \"overflow-wrap\": \"break-word\" }}>{news}</div>\n                  <div className=\"d-flex text-left col-12 col-xl-3 \">{earnings}</div>\n                  <div className=\"col-12 col-xl-3\">\n                    <div className=\"d-flex text-left pl-5\">{PT}</div>\n                    <div className=\"d-flex text-left pl-5\">{HL}</div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n\n  }\n}\n\nclass App extends Component {\n  constructor() {\n    super();\n    let Symbols = []\n    this.state = { stock: 0, Symbols, Filtered: [] ,key:0}\n    fetch(TEXT)\n      .then(response => response.text()\n        .then(text => {\n          Symbols = text.split('\\n');\n          for (let i = 0; i < Symbols.length; i++) {\n            Symbols[i] = JSON.parse(Symbols[i]);\n          }\n          this.setState({ Symbols, Filtered: Symbols });\n        }));\n  }\n\n\n  setStock(stock) {\n    if(stock < 0) stock = 0\n    if(stock > this.state.Filtered.length - 1) stock = this.state.Filtered.length - 1;\n    this.setState({ stock,key:stock })\n\n  }\n  filter(text) {\n    let Filtered = [];\n    this.state.Symbols.forEach(Symbol => {\n      if (Symbol.symbol.toLowerCase().includes(text.toLowerCase()) || Symbol.description.toLowerCase().includes(text.toLowerCase())) {\n        Filtered.push(Symbol);\n      }\n    });\n    this.setState({ Filtered, stock: 0 ,key:this.state.key+2 })\n  }\n  render() {\n\n    return (\n      <div key=\"app\" >\n        <div className=\"d-flex justify-content-center vw-100\">\n          <button className=\"btn\" onClick={() => { this.setStock(this.state.stock - 1) }}>Previous Stock</button>\n          <button className=\"btn\" onClick={() => { this.setStock(this.state.stock + 1) }}>Next Stock</button>\n          <input id=\"filter\" type=\"text\" placeholder=\"search\" onChange={(event) => {  this.filter(event.target.value) }} />\n        </div>\n        {this.state.Filtered.length > 1 ?\n          <Stock stock={this.state.stock} symbol={this.state.Filtered[this.state.stock]} key={this.state.key}> </Stock>\n          : <div></div>}\n      </div>\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}