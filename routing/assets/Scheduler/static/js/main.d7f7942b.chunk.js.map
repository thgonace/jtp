{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","props","state","showHide","viewBooked","a","b","Math","floor","this","setState","i","j","booking","undefined","bookings","forEach","e","TimeSlot","row","WhoBooked","Who","WhatBooked","What","NameBooked","Name","now","Date","dateStart","UTC","getFullYear","getMonth","getDate","end","dateEnd","Axios","method","url","data","then","response","console","log","length","dateDiffInDays","catch","error","status","headers","request","message","getBookings","date","value","doing","Hide","rows","push","className","style","onClick","show","ShowBooked","days","toDateString","setDate","timeBooked","Modal","Header","closeButton","Title","Body","id","ref","c","placeholder","Footer","Button","variant","book","HideBooked","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7f7942b.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Button, Modal } from 'react-bootstrap'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Axios from 'axios';\n\nclass App extends Component {\n  dateDiffInDays(a, b) {\n    const _MS_PER_DAY = 1000 * 60 * 60 * 24;\n    return Math.floor((a - b) / _MS_PER_DAY);\n  }\n  constructor(props) {\n    super(props);\n\n    this.state = { showHide: false, viewBooked: false };\n\n  }\n  Hide() {\n    this.setState({ showHide: false, i: 0, j: 0 })\n  }\n  show(i, j) {\n    this.setState({ showHide: true, i, j })\n  }\n  HideBooked() {\n    this.setState({ viewBooked: false, i: 0, j: 0 })\n  }\n  ShowBooked(i, j) {\n    let booking = null;\n    if (this.state.bookings !== undefined) {\n      this.state.bookings.forEach(e => {\n        if (e.TimeSlot === i && e.row === j) {\n          booking = e;\n        }\n      });\n    }\n    if (booking !== null)\n      this.setState({ viewBooked: true, i, j, WhoBooked: booking.Who, WhatBooked: booking.What, NameBooked: booking.Name })\n  }\n  getBookings() {\n    let now = new Date();\n    let dateStart = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate());\n    let end = new Date(now.getFullYear(), now.getMonth(), now.getDate() + 5);\n    let dateEnd = Date.UTC(end.getFullYear(), end.getMonth(), end.getDate());\n    Axios({\n      method: 'post',\n      url: 'https://jtp-bootcamp-server.herokuapp.com/scheduler',\n      data: { 'doing': 'getting', 'DateStart': dateStart, 'DateEnd': dateEnd }\n    }).then(response => {\n      let bookings = response.data\n      console.log(\"response\")\n      for (let i = 0; i < bookings.length; i++) {\n        bookings[i].row = this.dateDiffInDays(bookings[i].Date, dateStart);\n        console.log(bookings[i])\n\n      }\n      console.log(bookings)\n      this.setState({ bookings })\n\n    }).catch(function (error) {\n      if (error.response) {\n        // Request made and server responded\n        console.log(error.response.data);\n        console.log(error.response.status);\n        console.log(error.response.headers);\n      } else if (error.request) {\n        // The request was made but no response was received\n        console.log(error.request);\n      } else {\n        // Something happened in setting up the request that triggered an Error\n        console.log('Error', error.message);\n      }\n    })\n  }\n  componentDidMount() {\n    this.getBookings();\n  }\n  book() {\n    let now = new Date();\n    let date = Date.UTC(now.getFullYear(), now.getMonth(), now.getDate() + this.state.j);\n    let Name = this.Name.value\n    let Who = this.Who.value\n    let What = this.What.value\n    Axios({\n      method: 'post',\n      url: 'https://jtp-bootcamp-server.herokuapp.com/scheduler',\n      data: { doing: 'book', Date: date, TimeSlot: this.state.i, Name, Who, What }\n    }).then(response => { this.getBookings(); })\n    this.Hide();\n  }\n  render() {\n    let rows = []\n    for (let i = 8; i <= 21; i++) {\n      let row = []\n      if (i < 12) row.push(<div className=\"col-1\" style={{ 'width': '80px', 'fontSize': '1.2rem' }}>{i} AM</div>);\n      if (i === 12) row.push(<div className=\"col-1\" style={{ 'width': '80px', 'fontSize': '1.2rem' }}>12 PM</div>);\n      if (i > 12 && i < 24) row.push(<div className=\"col-1\" style={{ 'width': '80px', 'fontSize': '1.2rem' }}>{i - 12} PM</div>);\n\n      for (let j = 0; j < 5; j++) {\n        let booking = null;\n        if (this.state.bookings !== undefined) {\n          this.state.bookings.forEach(e => {\n            if (e.TimeSlot === i && e.row === j) {\n              booking = e;\n            }\n          });\n        }\n\n        if (booking === null)\n          row.push(<div className=\"col-2 w-100 d-flex justify-content-center\"><button onClick={() => { this.show(i, j) }} className='btn example_b' style={{ 'height': 50, 'fontSize': '1.2rem' }}>Book {i} {(i) < 12 ? 'AM' : 'PM'} - {i + 1} {(i + 1) < 12 ? 'AM' : 'PM'}</button></div>);\n        if (booking !== null)\n          row.push(<div className=\"col-2 w-100 d-flex justify-content-center\"><button onClick={() => { this.ShowBooked(i, j) }} className='btn booked' style={{ 'height': 50, 'fontSize': '1.2rem' }}>Booked by {booking.Name}</button></div>);\n      }\n      rows.push(<div className=\"d-flex  align-items-center\">{row} </div>)\n    }\n    let days = [<div className='col-1'></div>]\n    let date = new Date();\n    for (let i = 0; i < 5; i++) {\n      days.push(<div className=\"col-2\" style={{ 'fontSize': '1.2rem', 'textAlign': \"center\" }}>{date.toDateString()}  </div>)\n      date.setDate(date.getDate() + 1);\n    }\n    let timeBooked = \"\";\n    if(this.state.i <12) {\n      timeBooked = this.state.i +\" AM\"\n    } else if (this.state.i === 12) {\n      timeBooked = this.state.i +\" PM\"\n    } else if (this.state.i > 12){\n      timeBooked = this.state.i - 12 +\" PM\"\n    }\n    return (\n      <div className=\"vw-100\">\n        <h1 className=\"text-center w-100\">Scheduler</h1>\n        <div className='d-flex w-100'>{days}</div>\n        <div>{rows} </div>\n        <div>\n\n          <Modal show={this.state.showHide}>\n            <Modal.Header closeButton onClick={() => this.Hide()}>\n              <Modal.Title>Booking</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div>\n                <input id=\"Name\" ref={(c) => this.Name = c} placeholder=\"Name\" />\n              </div>\n              <div>\n                Who are you booking?\n                <select id=\"Who\" ref={(c) => this.Who = c}>\n                  <option value=\"Joshua\">Joshua</option>\n                </select>\n              </div>\n              <div>\n                What are you booking for?\n                <select id=\"What\" ref={(c) => this.What = c}>\n                  <option value=\"Programming\">Programming</option>\n                  <option value=\"Tutoring\">Tutoring</option>\n                </select>\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => this.Hide()}>Cancel</Button>\n              <Button variant=\"primary\" onClick={() => this.book()}>Book</Button>\n            </Modal.Footer>\n          </Modal>\n          <Modal show={this.state.viewBooked}>\n            <Modal.Header closeButton onClick={() => this.HideBooked()}>\n              <Modal.Title>Booked</Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n              <div>\n                Booked by {this.state.NameBooked}\n              </div>\n              <div>\n                Booking  {this.state.WhoBooked} for {this.state.WhatBooked} at {timeBooked}\n              </div>\n            </Modal.Body>\n            <Modal.Footer>\n              <Button variant=\"secondary\" onClick={() => this.HideBooked()}>Cancel</Button>\n            </Modal.Footer>\n          </Modal>\n\n\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}