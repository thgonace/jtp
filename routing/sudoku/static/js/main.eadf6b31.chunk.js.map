{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","handleKeyPress","event","i","state","selected","j","includes","key","fixedAvail","remove","removed","temp","filter","e","value","length","splice","indexOf","removeValid","setState","allavail","avail","push","board","Array","fill","boardClass","boardText","rule","tab","fixedBoard","canRemove","difficulty","singles","bind","subsets","uniques","initializeArrays","reset","this","clear","initboard","nums","num","shuffled","Math","floor","random","available","count","forEach","array","k","checkall","r","hiddenSubsets","input","boxRight","boxDown","checkbox","checkrow","checkcolumn","keepSelected","numbers","boardClassText","skip","l","sumArray","map","entry","index","className","m","join","hiddenSubsets2helper","hiddenSubsets3helper","a","args","arg","element","b","JSON","stringify","compare","c","secondvalues","ib","jb","thirdvalue","pos","availableNumbers","columnNumbers","rowNumbers","boxNumbers","row","cls","txt","id","onClick","click","style","height","width","display","borderColor","first","toString","tabIndex","onKeyPress","setRule","number","erase","setTab","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.eadf6b31.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      board: [], avail: new Array(9).fill(new Array(9)), selected: { i: -1, j: -1 },\n      fixedAvail: new Array(9).fill(new Array(9)),\n      boardClass: new Array(9),\n      boardText: new Array(9).fill(new Array(9)),\n      rule: \"\", tab: \"none\", fixedBoard: [], remove: false, removed: [],\n      canRemove: [],\n      difficulty: 40\n    };\n    this.singles = this.singles.bind(this);\n    this.subsets = this.subsets.bind(this);\n    this.uniques = this.uniques.bind(this);\n    this.initializeArrays = this.initializeArrays.bind(this);\n    this.reset = this.reset.bind(this);\n  };\n  componentWillMount() {\n    this.initializeArrays();\n  }\n  initializeArrays(remove=40) {\n    \n    if (this.state.board.length !== 0) this.clear();\n    var initboard = new Array(9);\n    var nums = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n    var num = 0;\n    var shuffled = [];\n    for (var i = 9; i > 0; i--) {\n      num = Math.floor(Math.random() * (i - 1));\n      shuffled.push(nums[num]);\n      nums.splice(num, 1)\n    }\n    initboard[0] = [shuffled[0],\n    shuffled[1],\n    shuffled[2],\n    shuffled[3],\n    shuffled[4],\n    shuffled[5],\n    shuffled[6],\n    shuffled[7],\n    shuffled[8]];\n    initboard[1] = [shuffled[3],\n    shuffled[4],\n    shuffled[5],\n    shuffled[6],\n    shuffled[7],\n    shuffled[8],\n    shuffled[0],\n    shuffled[1],\n    shuffled[2]];\n    initboard[2] = [shuffled[6],\n    shuffled[7],\n    shuffled[8],\n    shuffled[0],\n    shuffled[1],\n    shuffled[2],\n    shuffled[3],\n    shuffled[4],\n    shuffled[5]];\n    initboard[3] = [shuffled[1],\n    shuffled[2],\n    shuffled[3],\n    shuffled[4],\n    shuffled[5],\n    shuffled[6],\n    shuffled[7],\n    shuffled[8],\n    shuffled[0]];\n    initboard[4] = [shuffled[4],\n    shuffled[5],\n    shuffled[6],\n    shuffled[7],\n    shuffled[8],\n    shuffled[0],\n    shuffled[1],\n    shuffled[2],\n    shuffled[3]];\n    initboard[5] = [shuffled[7],\n    shuffled[8],\n    shuffled[0],\n    shuffled[1],\n    shuffled[2],\n    shuffled[3],\n    shuffled[4],\n    shuffled[5],\n    shuffled[6]];\n    initboard[6] = [shuffled[2],\n    shuffled[3],\n    shuffled[4],\n    shuffled[5],\n    shuffled[6],\n    shuffled[7],\n    shuffled[8],\n    shuffled[0],\n    shuffled[1]];\n    initboard[7] = [shuffled[5],\n    shuffled[6],\n    shuffled[7],\n    shuffled[8],\n    shuffled[0],\n    shuffled[1],\n    shuffled[2],\n    shuffled[3],\n    shuffled[4]];\n    initboard[8] = [shuffled[8],\n    shuffled[0],\n    shuffled[1],\n    shuffled[2],\n    shuffled[3],\n    shuffled[4],\n    shuffled[5],\n    shuffled[6],\n    shuffled[7]];\n    var available = [];\n    for (i = 0; i < 81; i++) {\n      available.push(i + 1);\n    }\n\n    for (var count = 0; count < remove; count++) {\n      num = Math.floor(Math.random() * (80 - count));\n      i = Math.floor(available[num] / 9);\n      var j = available[num] % 9;\n      available.splice(num, 1);\n      initboard[i][j] = \"\";\n    }\n    let fixedBoard = [];\n    initboard.forEach(array => {\n      fixedBoard.push([...array]);\n    })\n    let boardClass = this.state.boardClass;\n    let boardText = this.state.boardText;\n    for (let i = 0; i < 9; i++) {\n      boardText[i] = new Array(9);\n      boardClass[i] = new Array(9);\n      for (let j = 0; j < 9; j++) {\n        boardClass[i][j] = [];\n        boardText[i][j] = [];\n      }\n    }\n\n    this.setState({ board: [...initboard], boardClass, fixedBoard, removed: [], difficulty: remove}, () => {\n      this.allavail()\n    })\n\n\n  }\n  allavail() {\n    this.clear(false);\n    const avail = []\n    for (let i = 0; i < 9; i++) {\n      avail.push([])\n      for (let j = 0; j < 9; j++) {\n        avail[i].push([])\n        if (this.state.board[i][j] < 1) {\n          const array = [];\n          for (let k = 1; k < 10; k++) {\n            if (this.checkall(k, i, j)) {\n              array.push(k);\n            }\n          }\n          avail[i][j] = array;\n        }\n      }\n    }\n    let fixedAvail = [];\n    avail.forEach(e => {\n      let array = [];\n      e.forEach(r => {\n        array.push([...r])\n      })\n      fixedAvail.push(array);\n    })\n    this.state.removed.forEach(value => {\n      if (this.state.board[value.i][value.j] < 1) {\n        avail[value.i][value.j] = avail[value.i][value.j].filter(e => {\n          return (e * 1 !== 1 * value.value);\n        });\n      }\n    })\n    this.setState({ avail, fixedAvail }, () => {\n      switch (this.state.rule) {\n        case \"Uniques\": this.uniques(); break;\n        case \"Singles\": this.singles(); break;\n        case \"Subsets\": this.subsets(); break;\n        case \"Hidden\": this.hiddenSubsets(); break;\n        default:\n      }\n    });\n  }\n  checkrow(input, j) {\n    var board = this.state.board;\n    for (var i = 0; i < 9; i++) {\n      if (board[i][j] === input) return false;\n    }\n    return true;\n  }\n  checkcolumn(input, i) {\n    var board = this.state.board;\n    for (var j = 0; j < 9; j++) {\n      if (board[i][j] === input) return false;\n    }\n    return true;\n  }\n  checkbox(input, i, j) {\n    var boxRight = Math.floor(i / 3)\n    var boxDown = Math.floor(j / 3)\n    var board = this.state.board;\n    for (i = boxRight * 3; i < (boxRight + 1) * 3; i++) {\n      for (j = boxDown * 3; j < (boxDown + 1) * 3; j++) {\n        if (board[i][j] === input) return false;\n      }\n    }\n    return true;\n  }\n  checkall(input, i, j) {\n    input = 1 * input;\n    return (this.checkbox(input, i, j) && this.checkrow(input, j) && this.checkcolumn(input, i));\n  }\n  setTab(tab) {\n    this.setState({ tab });\n  }\n  handleKeyPress = (event) => {\n    let valid = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"];\n    let i = this.state.selected.i;\n    if (i === -1) return;\n    let j = this.state.selected.j\n    if (valid.includes(event.key) && this.state.fixedAvail[i][j].includes(event.key * 1)) {\n      if (this.state.remove === true) {\n        let removed = this.state.removed;\n        let temp = removed.filter(e => { return e.i === i && e.j === j && e.value === event.key });\n        if (temp.length > 0) {\n          removed.splice(removed.indexOf(temp[0]), 1);\n          this.removeValid();\n          this.setState({ removed }, () => { this.allavail() });\n        } else if (this.state.avail[i][j].length > 1) {\n          removed.push({ i, j, value: event.key })\n          this.removeValid();\n          this.setState({ removed }, () => { this.allavail() });\n        }\n      } else if (this.state.avail[i][j].includes(event.key * 1)) {\n        var board = this.state.board;\n        board[i][j] = 1 * event.key;\n        this.setState({ board, selected: { i: -1, j: -1 } }, () => { this.allavail() });\n      }\n    }\n  }\n  reset() {\n    this.clear();\n    let board = [];\n    this.state.fixedBoard.forEach(array => {\n      board.push([...array]);\n    })\n    this.setState({\n      board,\n      removed: [],\n      rule: \"\"\n    }, () => (this.allavail()));\n  }\n  click(i, j) {\n    if (this.state.fixedBoard[i][j] > 0) {\n      return;\n    }\n    var board = this.state.board;\n    board[i][j] = \"\";\n    this.setState({ board: board, selected: { i, j } }, () => (this.allavail()));\n  }\n  clear(keepSelected) {\n    let boardClass = this.state.boardClass;\n    let boardText = this.state.boardText;\n    let selected = this.state.selected;\n    for (let j = 0; j < 9; j++) {\n      for (let i = 0; i < 9; i++) {\n        boardClass[i][j] = [];\n        boardText[i][j] = \"\";\n      }\n    }\n    if (keepSelected !== false && this.state.selected.i !== -1) {\n      selected = { i: -1, j: -1 };\n    }\n    this.setState({ boardClass, boardText, selected });\n  }\n  setRule(rule) {\n    this.clear();\n    switch (rule) {\n      case \"Singles\":\n        this.singles();\n        break;\n      case \"Uniques\":\n        this.uniques();\n        break;\n      case \"Subsets\":\n        this.subsets();\n        break;\n      case \"Hidden\":\n        this.hiddenSubsets();\n        break;\n      default:\n    }\n    this.setState({ rule });\n  }\n\n  singles() {\n    let boardClass = this.state.boardClass\n    for (let j = 0; j < 9; j++) {\n      for (let i = 0; i < 9; i++) {\n        if (this.state.avail[i][j].length === 1) {\n          boardClass[i][j].push(\"single\");\n        }\n      }\n    }\n    this.setState({ boardClass });\n  }\n  hiddenSubsets2helper(k, numbers, boardClassText) {\n    let boardClass = boardClassText.boardClass;\n    let boardText = boardClassText.boardText;\n    let canRemove = [];\n    let skip = false;\n    if (numbers[k].length > 1 && numbers[k].length < 3) {\n      for (let l = k + 1; l < 10; l++) {\n        if (numbers[l].length > 1 && numbers[l].length < 3) {\n          let temp = this.sumArray(numbers[k], numbers[l]);\n          if (temp.length === 2) {\n            this.state.avail[temp[0].i][temp[0].j].forEach((e) => {\n              if (e !== k && e !== l) canRemove.push({ i: temp[0].i, j: temp[0].j, value: e })\n            })\n            this.state.avail[temp[1].i][temp[1].j].forEach((e) => {\n              if (e !== k && e !== l) canRemove.push({ i: temp[1].i, j: temp[1].j, value: e })\n            })\n\n            boardClass[temp[0].i][temp[0].j].push(\"hiddensubset2\")\n            boardText[temp[0].i][temp[0].j] = this.state.avail[temp[0].i][temp[0].j].map((entry, index) => {\n              return <span>{(index>0? \",\":\"\")}<span className={(canRemove.filter((e) => (e.i === temp[0].i && e.j === temp[0].j && e.value * 1 === 1 * entry)).length > 0 ? \"text-danger\" : \"\")}>{entry}</span></span>\n            });\n            \n            boardClass[temp[1].i][temp[1].j].push(\"hiddensubset2\")\n            boardText[temp[1].i][temp[1].j] = this.state.avail[temp[1].i][temp[1].j].map((entry, index) => (\n              <span>{(index>0? \",\":\"\")}<span className={(canRemove.filter((e) => (e.i === temp[1].i && e.j === temp[1].j && e.value * 1 === 1 * entry)).length > 0 ? \"text-danger\" : \"\")}>{entry}</span></span>\n            ));\n\n\n            skip = true; break;\n          }\n        }\n      }\n      if (skip === true) return { boardClass, boardText };\n    }\n    return { boardClass, boardText, canRemove }\n  }\n  hiddenSubsets3helper(k, numbers, boardClassText) {\n    let boardClass = boardClassText.boardClass;\n    let boardText = boardClassText.boardText;\n    if (numbers[k].length > 1 && numbers[k].length < 4) {\n      for (let l = k + 1; l < 10; l++) {\n        if (numbers[l].length > 1 && numbers[l].length < 4) {\n          let temp = this.sumArray(numbers[k], numbers[l]);\n          if (temp.length < 4) {\n            for (let m = l + 1; m < 10; m++) {\n              if (numbers[m].length > 1 && numbers[m].length < 4) {\n                let temp = this.sumArray(numbers[k], numbers[l], numbers[m]);\n                if (temp.length === 3) {\n                  boardClass[temp[0].i][temp[0].j].push(\"hiddensubset3\")\n                  boardText[temp[0].i][temp[0].j] = [k, l, m].join(\",\");\n                  boardClass[temp[1].i][temp[1].j].push(\"hiddensubset3\")\n                  boardText[temp[1].i][temp[1].j] = [k, l, m].join(\",\");\n                  boardClass[temp[2].i][temp[2].j].push(\"hiddensubset3\")\n                  boardText[temp[2].i][temp[2].j] = [k, l, m].join(\",\");\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    return { boardClass, boardText }\n  }\n  hiddenSubsets() {\n    let boardClassText = { boardClass: this.state.boardClass, boardText: this.state.boardText, canRemove: this.state.canRemove }\n    for (let i = 0; i < 9; i++) {\n      let numbers = new Array(10);\n      for (let k = 0; k < 10; k++) {\n        numbers[k] = [];\n      }\n      for (let j = 0; j < 9; j++) {\n        let temp = this.state.avail[i][j];\n        for (let k = 0; k < temp.length; k++) {\n          numbers[temp[k]].push({ i: i, j: j })\n        }\n      }\n      for (let k = 1; k < 10; k++) {\n        boardClassText = this.hiddenSubsets2helper(k, numbers, boardClassText);\n        boardClassText = this.hiddenSubsets3helper(k, numbers, boardClassText);\n      }\n      for (let j = 0; j < 9; j++) {\n        let numbers = new Array(10);\n        for (let k = 0; k < 10; k++) {\n          numbers[k] = [];\n        }\n        for (let i = 0; i < 9; i++) {\n          let temp = this.state.avail[i][j];\n          for (let k = 0; k < temp.length; k++) {\n            numbers[temp[k]].push({ i: i, j: j })\n          }\n        }\n        for (let k = 1; k < 10; k++) {\n          boardClassText = this.hiddenSubsets2helper(k, numbers, boardClassText);\n          boardClassText = this.hiddenSubsets3helper(k, numbers, boardClassText);\n        }\n        for (let boxRight = 0; boxRight < 3; boxRight++) {\n          for (let boxDown = 0; boxDown < 3; boxDown++) {\n            let numbers = new Array(10);\n            for (let k = 0; k < 10; k++) {\n              numbers[k] = [];\n            }\n            for (let i = boxRight * 3; i < (boxRight + 1) * 3; i++) {\n              for (let j = boxDown * 3; j < (boxDown + 1) * 3; j++) {\n                let temp = this.state.avail[i][j];\n                for (let k = 0; k < temp.length; k++) {\n                  numbers[temp[k]].push({ i: i, j: j })\n                }\n              }\n            }\n            for (let k = 1; k < 10; k++) {\n              boardClassText = this.hiddenSubsets2helper(k, numbers, boardClassText);\n              boardClassText = this.hiddenSubsets3helper(k, numbers, boardClassText);\n            }\n          }\n        }\n      }\n    }\n    this.setState({ boardClass: boardClassText.boardClass, boardText: boardClassText.boardText, canRemove: boardClassText.canRemove });\n  }\n  sumArray(a, ...args) {\n    let temp = [...a]\n    args.forEach(arg => {\n      arg.forEach(element => {\n        if (temp.filter(e => { return (e.i === element.i && e.j === element.j) }).length === 0) temp.push(element);\n      });\n    })\n    return temp\n  }\n\n  removeValid() {\n    this.setState({ remove: !this.state.remove })\n  }\n  compare(a, b) {\n    return JSON.stringify(a) === JSON.stringify(b)\n  }\n  secondvalues(a, b) {\n    if (b.length < 2) return false;\n    if (a.length === 2) {\n      if (this.compare(a, b)) return false;\n    }\n    let temp = [...a];\n    b.forEach(element => {\n      if (!temp.includes(element)) temp.push(element);\n    });\n    return temp.length < 4;\n  }\n  thirdvalue(a, b, c) {\n    if (c.length < 2) return false;\n    if (a.length === 2) {\n      if (this.compare(a, b) || this.compare(a, c)) return false\n    }\n    if (b.length === 2) {\n      if (this.compare(b, c)) return false\n    }\n    let temp = [...a];\n    b.forEach(element => {\n      if (!temp.includes(element)) temp.push(element);\n    });\n    c.forEach(element => {\n      if (!temp.includes(element)) temp.push(element);\n    });\n    return temp.length < 4;\n  }\n  subsets() {\n    let boardClass = this.state.boardClass;\n    let boardText = this.state.boardText;\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        if (this.state.board[i][j] < 1 && this.state.avail[i][j].length < 4 && this.state.avail[i][j].length > 1) {\n          let array = this.state.avail[i][j];\n          let secondvalues = [];\n          let ib = i;\n          for (let jb = j + 1; jb < 9; jb++) {\n            if (this.state.board[ib][jb] < 1 && this.secondvalues(array, this.state.avail[ib][jb])) {\n              secondvalues.forEach(value => {\n                if (this.thirdvalue(array, value.avail, this.state.avail[ib][jb])) {\n                  boardClass[i][j].push(\"subset3\");\n                  boardText[i][j] = array.join(\",\");\n                  boardClass[value.i][value.j].push(\"subset3\");\n                  boardText[value.i][value.j] = value.avail.join(\",\");\n                  boardClass[ib][jb].push(\"subset3\");\n                  boardText[ib][jb] = this.state.avail[ib][jb].join(\",\");\n                }\n\n              })\n              secondvalues.push({ i: ib, j: jb, avail: this.state.avail[ib][jb] });\n            }\n          }\n        }\n      }\n    }\n    for (let j = 0; j < 9; j++) {\n      for (let i = 0; i < 9; i++) {\n        if (this.state.board[i][j] < 1 && this.state.avail[i][j].length < 4 && this.state.avail[i][j].length > 1) {\n          let array = this.state.avail[i][j];\n          let secondvalues = [];\n          let jb = j;\n          for (let ib = i + 1; ib < 9; ib++) {\n            if (this.state.board[ib][jb] < 1 && this.secondvalues(array, this.state.avail[ib][jb])) {\n              secondvalues.forEach(value => {\n                if (this.thirdvalue(array, value.avail, this.state.avail[ib][jb])) {\n                  boardClass[i][j].push(\"subset3\");\n                  boardText[i][j] = array.join(\",\");\n                  boardClass[value.i][value.j].push(\"subset3\");\n                  boardText[value.i][value.j] = value.avail.join(\",\");\n                  boardClass[ib][jb].push(\"subset3\");\n                  boardText[ib][jb] = this.state.avail[ib][jb].join(\",\");\n                }\n              })\n              secondvalues.push({ i: ib, j: jb, avail: this.state.avail[ib][jb] });\n            }\n          }\n        }\n      }\n    }\n    for (let boxRight = 0; boxRight < 3; boxRight++) {\n      for (let boxDown = 0; boxDown < 3; boxDown++) {\n        for (let i = boxRight * 3; i < (boxRight + 1) * 3; i++) {\n          for (let j = boxDown * 3; j < (boxDown + 1) * 3; j++) {\n            if (this.state.board[i][j] < 1 && this.state.avail[i][j].length < 4 && this.state.avail[i][j].length > 1) {\n              let array = this.state.avail[i][j];\n              let secondvalues = [];\n              for (let ib = boxRight * 3; ib < (boxRight + 1) * 3; ib++) {\n                for (let jb = boxDown * 3; jb < (boxDown + 1) * 3; jb++) {\n                  if (this.state.board[ib][jb] < 1 && (ib !== i || jb !== j) && this.secondvalues(array, this.state.avail[ib][jb])) {\n                    secondvalues.forEach(value => {\n                      if (this.thirdvalue(array, value.avail, this.state.avail[ib][jb])) {\n                        boardClass[i][j].push(\"subset3\");\n                        boardText[i][j] = array.join(\",\");\n                        boardClass[value.i][value.j].push(\"subset3\");\n                        boardText[value.i][value.j] = value.avail.join(\",\");\n                        boardClass[ib][jb].push(\"subset3\");\n                        boardText[ib][jb] = this.state.avail[ib][jb].join(\",\");\n                      }\n                    })\n                    secondvalues.push({ i: ib, j: jb, avail: this.state.avail[ib][jb] });\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n\n\n\n    for (let i = 0; i < 9; i++) {\n      for (let j = 0; j < 9; j++) {\n        let ib = i;\n        if (this.state.board[i][j] < 1 && this.state.avail[i][j].length === 2) {\n          for (let jb = j + 1; jb < 9; jb++) {\n            if (this.state.board[ib][jb] < 1) {\n              if (this.compare(this.state.avail[ib][jb], this.state.avail[i][j])) {\n                boardClass[i][j].push(\"subset2\");\n                boardText[i][j] = this.state.avail[i][j].join(\",\");\n                boardClass[ib][jb].push(\"subset2\");\n                boardText[ib][jb] = this.state.avail[i][j].join(\",\");\n              }\n            }\n          }\n        }\n      }\n    }\n    for (let j = 0; j < 9; j++) {\n      for (let i = 0; i < 9; i++) {\n        let jb = j;\n        if (this.state.board[i][j] < 1 && this.state.avail[i][j].length === 2) {\n          for (let ib = i + 1; ib < 9; ib++) {\n            if (this.state.board[ib][jb] < 1) {\n              if (this.compare(this.state.avail[ib][jb], this.state.avail[i][j])) {\n                boardClass[i][j].push(\"subset2\");\n                boardText[i][j] = this.state.avail[i][j].join(\",\");\n                boardClass[ib][jb].push(\"subset2\");\n                boardText[ib][jb] = this.state.avail[i][j].join(\",\");\n              }\n            }\n          }\n        }\n      }\n    }\n    for (let boxRight = 0; boxRight < 3; boxRight++) {\n      for (let boxDown = 0; boxDown < 3; boxDown++) {\n        for (let i = boxRight * 3; i < (boxRight + 1) * 3; i++) {\n          for (let j = boxRight * 3; j < (boxRight + 1) * 3; j++) {\n            if (this.state.board[i][j] < 1 && this.state.avail[i][j].length === 2) {\n              for (let ib = boxRight * 3; ib < (boxRight + 1) * 3; ib++) {\n                for (let jb = boxRight * 3; jb < (boxRight + 1) * 3; jb++) {\n                  if (this.state.board[ib][jb] < 1) {\n                    if ((i !== ib || j !== jb) && this.compare(this.state.avail[ib][jb], this.state.avail[i][j])) {\n                      boardClass[i][j].push(\"subset2\");\n                      boardText[i][j] = this.state.avail[i][j].join(\",\");\n                      boardClass[ib][jb].push(\"subset2\");\n                      boardText[ib][jb] = this.state.avail[i][j].join(\",\");\n                    }\n                  }\n\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n    this.setState({ boardClass, boardText });\n  }\n  uniques() {\n    let boardText = this.state.boardText;\n    let boardClass = this.state.boardClass;\n    for (let k = 1; k < 10; k++) {\n      let pos = { i: 0, j: 0 };\n      for (let j = 0; j < 9; j++) {\n        let count = 0;\n        for (let i = 0; i < 9; i++) {\n          if (this.state.avail[i][j].includes(k)) {\n            pos.i = i;\n            pos.j = j;\n            count++;\n          }\n          if (count > 1) break;\n        }\n        if (count === 1 && this.state.avail[pos.i][pos.j].length !== 1) {\n          boardClass[pos.i][pos.j].push(\"unique\");\n          boardText[pos.i][pos.j] = k;\n        }\n      }\n      for (let i = 0; i < 9; i++) {\n        let count = 0;\n        for (let j = 0; j < 9; j++) {\n          if (this.state.avail[i][j].includes(k)) {\n            pos.i = i;\n            pos.j = j;\n            count++;\n          }\n          if (count > 1) break;\n        }\n        if (count === 1 && this.state.avail[pos.i][pos.j].length !== 1) {\n          boardClass[pos.i][pos.j].push(\"unique\");\n          boardText[pos.i][pos.j] = k;\n        }\n      }\n      for (let boxRight = 0; boxRight < 3; boxRight++) {\n        for (let boxDown = 0; boxDown < 3; boxDown++) {\n          let count = 0;\n          for (let i = boxRight * 3; i < (boxRight + 1) * 3; i++) {\n            for (let j = boxDown * 3; j < (boxDown + 1) * 3; j++) {\n              if (this.state.avail[i][j].includes(k)) {\n                count++;\n                pos.i = i;\n                pos.j = j;\n              }\n              if (count > 1) break;\n            }\n            if (count > 1) break;\n          }\n          if (count === 1 && this.state.avail[pos.i][pos.j].length !== 1) {\n            boardClass[pos.i][pos.j].push(\"unique\");\n            boardText[pos.i][pos.j] = k;\n          }\n        }\n      }\n    }\n    this.setState({ boardClass, boardText });\n  }\n  erase() {\n    let board = this.state.board;\n    board[this.state.selected.i][this.state.selected.j] = this.state.fixedBoard[this.state.selected.i][this.state.selected.j];    \n    this.setState({board, selected:{i:-1,j:-1}},()=>{ this.allavail()})\n  }\n  render() {\n    const board = [];\n    let availableNumbers = [];\n    let columnNumbers = [];\n    let rowNumbers = [];\n    let boxNumbers = [];\n    let boardClass = this.state.boardClass;\n    let boardText = this.state.boardText;\n\n    for (let j = 0; j < 9; j++) {\n      const row = [];\n      for (let i = 0; i < 9; i++) {\n        let cls = [...boardClass[i][j]];\n        let txt = boardText[i][j];\n        if (this.state.selected.i === i && this.state.selected.j === j) {\n          cls = [\"selected\"];\n          txt = \"\"\n        }\n        if (this.state.fixedBoard[i][j] > 0) {\n\n        } else if (this.state.board[i][j] > 0) {\n          cls.push(\"text-primary\")\n        }\n        row.push(<div key={\"cell:\" + i + \",\" + j} id={\"cell:\" + i + \",\" + j} className={cls.join(\" \")} onClick={() => this.click(i, j)}\n          style={{\n            \"verticalAlign\": \"top\",\n            \"textAlign\": \"center\",\n            \"borderRightWidth\": (((i % 3) === 2) ? 3 : 0) + 1 + \"px\",\n            \"borderLeftWidth\": ((i === 0) ? 3 : 0) + 1 + \"px\",\n            \"borderBottomWidth\": (((j % 3) === 2) ? 3 : 0) + 1 + \"px\",\n            \"borderTopWidth\": ((j === 0) ? 3 : 0) + 1 + \"px\",\n            \"borderStyle\": \"solid\", height: 20 + \"px\", width: 20 + \"px\", display: \"inline-block\", borderColor: \"black\"\n          }}>{(this.state.board[i][j] > 0) ? this.state.board[i][j] : txt}</div>);\n      }\n      board.push(<div key={\"row:\" + j}>{row}</div>);\n    }\n    if (this.state.selected.i !== -1) {\n      let i = this.state.selected.i;\n      let j = this.state.selected.j;\n      let removed = this.state.removed.filter(r => { return r.i === i && r.j === j })\n      let first = true;\n      this.state.fixedAvail[i][j].forEach(e => {\n        if (!first) availableNumbers.push(<span>,</span>);\n        first = false;\n        if (removed.filter(r => { return r.value * 1 === 1 * e }).length > 0) {\n          availableNumbers.push(<span className=\"removedNumber\">{e}</span>);\n\n        } else {\n          availableNumbers.push(<span>{e}</span>);\n        }\n      })\n      for (let j = 0; j < 9; j++) {\n        let numbers = \"\";\n\n        if (this.state.board[i][j]) {\n          numbers = \"Set to \" + this.state.board[i][j];\n        } else {\n          numbers = this.state.avail[i][j].toString();\n        }\n        numbers = <div>{numbers}</div>;\n        columnNumbers.push(numbers);\n      }\n      for (let i = 0; i < 9; i++) {\n        let numbers = \"\";\n        if (this.state.board[i][j]) {\n          numbers = \"Set to \" + this.state.board[i][j];\n        } else {\n          numbers = this.state.avail[i][j].toString();\n        }\n        numbers = <div>{numbers}</div>;\n        rowNumbers.push(numbers);\n      }\n      var boxRight = Math.floor(i / 3)\n      var boxDown = Math.floor(j / 3)\n      for (let j = boxDown * 3; j < (boxDown + 1) * 3; j++) {\n        for (let i = boxRight * 3; i < (boxRight + 1) * 3; i++) {\n          let numbers = \"\";\n          if (this.state.board[i][j]) {\n            numbers = \"Set to \" + this.state.board[i][j];\n          } else {\n            numbers = this.state.avail[i][j].toString();\n          }\n          numbers = <div>{numbers}</div>;\n          boxNumbers.push(numbers);\n        }\n      }\n    } else {\n      availableNumbers = [];\n      columnNumbers = [];\n      rowNumbers = [];\n      boxNumbers = [];\n    }\n    columnNumbers = <div>{columnNumbers}</div>;\n\n    return (\n      <div tabIndex=\"0\" onKeyPress={this.handleKeyPress}>\n        <div className=\"d-flex justify-content-center\">\n          <div>\n            <div className=\"d-flex justify-content-center\">\n              <button onClick={()=>{this.reset();this.initializeArrays(40)}} className={\"btn-sm highlightBtns \" + (this.state.difficulty !== 40 ? \"\" : \"bg-secondary\")}>Easy</button>\n              <button onClick={()=>{this.reset();this.initializeArrays(50)}} className={\"btn-sm highlightBtns \" + (this.state.difficulty !== 50 ? \"\" : \"bg-secondary\")}>Medium</button>\n              <button onClick={()=>{this.reset();this.initializeArrays(55)}} className={\"btn-sm highlightBtns \" + (this.state.difficulty !== 55 ? \"\" : \"bg-secondary\")}>Hard</button>\n            </div>\n            <div className=\"board\">{board}</div>\n            <div>\n              <button id=\"singlesBtn\" onClick={() => { this.setRule(\"Singles\") }} className={\"btn-sm highlightBtns \" + (this.state.rule !== \"Singles\" ? \"\" : \"bg-secondary\")}>Singles</button>\n              <button id=\"uniquesBtn\" onClick={() => { this.setRule(\"Uniques\") }} className={\"btn-sm highlightBtns \" + (this.state.rule !== \"Uniques\" ? \"\" : \"bg-secondary\")}>Uniques</button>\n              <button id=\"subsetsBtn\" onClick={() => { this.setRule(\"Subsets\") }} className={\"btn-sm highlightBtns \" + (this.state.rule !== \"Subsets\" ? \"\" : \"bg-secondary\")}>Subsets</button>\n              <button id=\"hiddenBtn\" onClick={() => { this.setRule(\"Hidden\") }} className={\"btn-sm highlightBtns \" + (this.state.rule !== \"Hidden\" ? \"\" : \"bg-secondary\")}>Hidden</button>\n            </div>\n            <div className=\"d-flex justify-content-center mt-2\">\n              <button onClick={this.reset} className=\"btn-sm mr-2\" >Reset</button>\n              <button onClick={() => { this.reset(); this.initializeArrays() }} className=\"btn-sm mr-2\" >New Game</button>\n            </div>\n          </div>\n        </div>\n        <div className=\"d-flex justify-content-center\">\n          <div id=\"availnums\" className={\"d-flex flex-column \" + ((this.state.selected.i !== -1) ? \"\" : \"fade\")}>\n            <div className=\"avail pr-2\">\n              <div className=\"availnums pb-2\"><div>Valid numbers for selected cell</div>\n                {(this.state.selected.i !== -1) && this.state.fixedAvail[this.state.selected.i][this.state.selected.j].map((number, index) => (\n                  <button onClick={() => { this.handleKeyPress({ key: \"\" + number }) }}\n                    className={\n                      \"btn-sm \" + ((this.state.removed.filter((e) => (e.i === this.state.selected.i && e.j === this.state.selected.j && e.value * 1 === 1 * number)).length > 0) ? \"text-danger\" : \"\")}>{number}</button>\n                ))}\n\n\n              </div>\n              <div className=\"float-right\">\n              <button onClick={()=>(this.erase())} className={\"btn-sm \"} >Erase</button>              \n              <button id=\"removeButton\" onClick={this.removeValid.bind(this)} className={\"btn-sm \" + (this.state.remove ? \"bg-danger\" : \"\")} >Remove</button>\n              </div>\n            </div>\n            <div className=\"mt-2\">\n              <button onClick={() => { this.setTab(\"Row\") }} className={\"btn-sm mr-2 \" + (this.state.tab === \"Row\" ? \"bg-secondary\" : \"\")}>Row</button>\n              <button onClick={() => { this.setTab(\"Column\") }} className={\"btn-sm mr-2 \" + (this.state.tab === \"Column\" ? \"bg-secondary\" : \"\")}>Column</button>\n              <button onClick={() => { this.setTab(\"Box\") }} className={\"btn-sm \" + (this.state.tab === \"Box\" ? \"bg-secondary\" : \"\")}>Box</button>\n            </div>\n            <div className=\"avail\">\n              <div id=\"row\" className={\"availbox \" + (this.state.tab === \"Row\" ? \"\" : \"none\")}>\n                <div>Valid numbers for cells in row</div>\n                {rowNumbers}\n              </div>\n              <div id=\"column\" className={\"availbox \" + (this.state.tab === \"Column\" ? \"\" : \"none\")}><div>Valid numbers for cells in column</div>\n                {columnNumbers}\n              </div>\n              <div id=\"box\" className={\"availbox \" + (this.state.tab === \"Box\" ? \"\" : \"none\")}>\n                <div>Valid numbers for cells in box</div>\n                {boxNumbers}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  };\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}